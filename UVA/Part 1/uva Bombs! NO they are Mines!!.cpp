#include <iostream>
#include <stdio.h>
#include <string.h>
using namespace std;
int arr[1050][1050],len,children1[1002][2],children2[1002][2];
void bfs(int a1,int b1,int a2,int b2,int a,int b)
{
    int m,n=0,i,flag=0,flag1,c,d;
    memset(children1,0,sizeof(children1));
    memset(children2,0,sizeof(children2));
    children1[0][0]=a1;
    children1[0][1]=b1;
    arr[a1][b1]=1;
    m=1;
    n=0;
    flag1=0;
    while(1)
    {
        if(flag==0)
        {
            for(i=0; i<m; i++)
            {
                a1=children1[i][0];
                b1=children1[i][1];
                c=a1-1;
                d=b1;
                if(c>=0&&d>=0&&c<a&&d<b)
                {
                    if(arr[c][d]==0)
                    {
                        arr[c][d]=1;
                        children2[n][0]=c;
                        children2[n][1]=d;
                        n++;
                        if(c==a2&&d==b2)
                        {
                            flag1=1;
                            break;
                        }
                    }
                }
                c=a1;
                d=b1-1;
                if(c>=0&&d>=0&&c<a&&d<b)
                {
                    if(arr[c][d]==0)
                    {
                        arr[c][d]=1;
                        children2[n][0]=c;
                        children2[n][1]=d;
                        n++;
                        if(c==a2&&d==b2)
                        {
                            flag1=1;
                            break;
                        }
                    }
                }
                c=a1+1;
                d=b1;
                if(c>=0&&d>=0&&c<a&&d<b)
                {
                    if(arr[c][d]==0)
                    {
                        arr[c][d]=1;
                        children2[n][0]=c;
                        children2[n][1]=d;
                        n++;
                        if(c==a2&&d==b2)
                        {
                            flag1=1;
                            break;
                        }
                    }
                }
                c=a1;
                d=b1+1;
                if(c>=0&&d>=0&&c<a&&d<b)
                {
                    if(arr[c][d]==0)
                    {
                        arr[c][d]=1;
                        children2[n][0]=c;
                        children2[n][1]=d;
                        n++;
                        if(c==a2&&d==b2)
                        {
                            flag1=1;
                            break;
                        }
                    }
                }
            }
            m=0;
            flag=1;
        }
        else
        {
            for(i=0; i<n; i++)
            {
                a1=children2[i][0];
                b1=children2[i][1];
                c=a1-1;
                d=b1;
                if(c>=0&&d>=0&&c<a&&d<b)
                {
                    if(arr[c][d]==0)
                    {
                        arr[c][d]=1;
                        children1[m][0]=c;
                        children1[m][1]=d;
                        m++;
                        if(c==a2&&d==b2)
                        {
                            flag1=1;
                            break;
                        }
                    }
                }
                c=a1;
                d=b1-1;
                if(c>=0&&d>=0&&c<a&&d<b)
                {
                    if(arr[c][d]==0)
                    {
                        arr[c][d]=1;
                        children1[m][0]=c;
                        children1[m][1]=d;
                        m++;
                        if(c==a2&&d==b2)
                        {
                            flag1=1;
                            break;
                        }
                    }
                }
                c=a1+1;
                d=b1;
                if(c>=0&&d>=0&&c<a&&d<b)
                {
                    if(arr[c][d]==0)
                    {
                        arr[c][d]=1;
                        children1[m][0]=c;
                        children1[m][1]=d;
                        m++;
                        if(c==a2&&d==b2)
                        {
                            flag1=1;
                            break;
                        }
                    }
                }
                c=a1;
                d=b1+1;
                if(c>=0&&d>=0&&c<a&&d<b)
                {
                    if(arr[c][d]==0)
                    {
                        arr[c][d]=1;
                        children1[m][0]=c;
                        children1[m][1]=d;
                        m++;
                        if(c==a2&&d==b2)
                        {
                            flag1=1;
                            break;
                        }
                    }
                }
            }
            n=0;
            flag=0;
        }
        len++;
        if(flag1==1)
            break;
    }
    return;
}
int main ()
{
    int a,b,c,i,d,e,a1,b1,a2,b2,j;
    while((scanf("%d %d",&a,&b))==2)
    {
        if(a==0&&b==0)
            break;
        len=0;
        memset(arr,0,sizeof(arr));
        cin>>c;
        while(c--)
        {
            cin>>d>>i;
            while(i--)
            {
                cin>>e;
                arr[d][e]=1;
            }
        }
        cin>>a1>>b1>>a2>>b2;
        if((a1==a2&&b1==b2)||arr[a2][b2]==1)
            cout<<len<<endl;
        else
        {
            bfs(a1,b1,a2,b2,a,b);
            cout<<len<<endl;
        }
    }
    return 0;
}
