#include <bits/stdc++.h>
#define ms(a,b) memset(a,b,sizeof(a))
#define inf 1<<28
#define mp make_pair
#define pii pair<int,int>
#define fs first
#define sc second
#define pob pop_back
#define vec_ vector
#define clr(a) a.clear()
#define pb push_back
#define eps 1E-7
#define sf scanf
#define pf printf
#define all(a) a.begin(),a.end()
#define allr(a) a.rbegin(),a.rend()
#define fop   freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#define sz(a) a.size()
#define ll long long
#define ull unsigned long long
#define dd double
using namespace std;

template<class T1> void deb(T1 e){cout<<e<<endl;}
template<class T1,class T2> void deb(T1 e1,T2 e2){cout<<e1<<" "<<e2<<endl;}
template<class T1,class T2,class T3> void deb(T1 e1,T2 e2,T3 e3){cout<<e1<<" "<<e2<<" "<<e3<<endl;}
template<class T1,class T2,class T3,class T4> void deb(T1 e1,T2 e2,T3 e3,T4 e4){cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<endl;}
template<class T1,class T2,class T3,class T4,class T5> void deb(T1 e1,T2 e2,T3 e3,T4 e4,T5 e5){cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<" "<<e5<<endl;}
template<class T1,class T2,class T3,class T4,class T5,class T6> void deb(T1 e1,T2 e2,T3 e3,T4 e4,T5 e5,T6 e6){cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<" "<<e5<<" "<<e6<<endl;}
//template <class T> T lcm(T a, T b){return (a/__gcd(a,b)) * b;}
//ll bigmod(ll a,ll b,ll m){if(b == 0) return 1%m;ll x = bigmod(a,b/2,m);x = (x * x) % m;if(b % 2 == 1) x = (x * a) % m;return x;}
//double dur(int x1,int y1,int x2,int y2)
//{
//    return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
//}
//int X[]={0,-1,-1,-1,0,1,1,1};
//int Y[]={-1,-1,0,1,1,1,0,-1};
//int X[]={-1,0,1,0};
//int Y[]={0,1,0,-1};

#define mt
#define mod
class BuyingTshirts {
public:
	int meet(int num, vector <int> v1, vector <int> v2) {
		int p1=0,p2=0;
		int ans=0,i;
		for(i=0;i<sz(v1);i++)
        {
            p1+=v1[i];
            p2+=v2[i];
            if(p1>=num && p2>=num)
                ans++;

            if(p1>=num)
                p1-=num;
            if(p2>=num)
                p2-=num;
        }
        return ans;
	}
};


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
#include <iostream>
#include <string>
#include <vector>
using namespace std;
bool KawigiEdit_RunTest(int testNum, int p0, vector <int> p1, vector <int> p2, bool hasAnswer, int p3) {
	cout << "Test " << testNum << ": [" << p0 << "," << "{";
	for (int i = 0; int(p1.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << p1[i];
	}
	cout << "}" << "," << "{";
	for (int i = 0; int(p2.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << p2[i];
	}
	cout << "}";
	cout << "]" << endl;
	BuyingTshirts *obj;
	int answer;
	obj = new BuyingTshirts();
	clock_t startTime = clock();
	answer = obj->meet(p0, p1, p2);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p3 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p3;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;

	int p0;
	vector <int> p1;
	vector <int> p2;
	int p3;

	{
	// ----- test 0 -----
	p0 = 5;
	int t1[] = {1,2,3,4,5};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	int t2[] = {5,4,3,2,1};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 2;
	all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}

	{
	// ----- test 1 -----
	p0 = 10;
	int t1[] = {10,10,10};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	int t2[] = {10,10,10};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 3;
	all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}

	{
	// ----- test 2 -----
	p0 = 2;
	int t1[] = {1,2,1,2,1,2,1,2};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	int t2[] = {1,1,1,1,2,2,2,2};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 5;
	all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}

	{
	// ----- test 3 -----
	p0 = 100;
	int t1[] = {1,2,3};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	int t2[] = {4,5,6};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 0;
	all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}

	{
	// ----- test 4 -----
	p0 = 10;
	int t1[] = {10,1,10,1};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	int t2[] = {1,10,1,10};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 0;
	all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}

	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// PROBLEM STATEMENT
// A local store is selling T-shirts with the face of Fox Ciel printed on them.
// Each such T-shirt costs T pesos.
// Quimey and Pablo love those T-shirts.
// They each buy a new T-shirt whenever they have the money to do so.
//
// Currently, Quimey and Pablo have no money at all.
// During the following N days they are going to earn some money and they will use it to buy the T-shirts.
// The days are numbered from 0 (today) to N-1 (the day N-1 days in the future).
//
// For each valid i, Q[i] and P[i] are the amounts in pesos Quimey and Pablo will earn on day i.
// (Note that each of those amounts is at most T.
// Therefore, Quimey and Pablo will be able to buy at most one T-shirt each day.)
//
// For example, suppose that a T-shirt costs T=10 pesos.
// If Q={2,3,5,10}, the following will happen to Quimey:
//
// On day 0, he earns 2 pesos. He now has 2 pesos.
// On day 1, he earns 3 pesos. He now has 5 pesos.
// On day 2, he earns 5 pesos. He now has 10 pesos, which is enough to buy a T-shirt. He goes to the store and buys one. Afterwards, he has 0 pesos left.
// On day 3, he earns 10 pesos. He then goes to buy a second T-shirt. Afterwards, he again has 0 pesos left.
//
// If P={10,8,6,4}, Pablo would buy one T-shirt on day 0, and then another T-shirt on day 2. After buying the T-shirt on day 2 he would have 4 pesos left. After day 3 he would then have a total of 8 pesos, which is still not enough for a T-shirt.
// Note that in this example Quimey and Pablo would go to the store together on day 2.
//
// You are given the int T: the price of a single T-shirt.
// You are also given the vector <int>s Q and P with N elements each: the amounts Quimey and Pablo earn each day.
// Compute and return the number of days on which Quimey and Pablo both go to the store
//
// DEFINITION
// Class:BuyingTshirts
// Method:meet
// Parameters:int, vector <int>, vector <int>
// Returns:int
// Method signature:int meet(int T, vector <int> Q, vector <int> P)
//
//
// NOTES
// -If you need the number N in your solution, you can determine it as the number of elements in Q.
//
//
// CONSTRAINTS
// -T will be between 1 and 100.
// -Q will contain between 1 and 100 elements.
// -Q and P will contain the same number of elements.
// -Each element of Q will be between 1 and T.
// -Each element of P will be between 1 and T.
//
//
// EXAMPLES
//
// 0)
// 5
// {1,2,3,4,5}
// {5,4,3,2,1}
//
// Returns: 2
//
// Quimey will buy his T-shirts on days 2, 3, and 4.
// Pablo will buy his on days 0, 2, and 4.
// They will go to the store together twice: first on day 2 and then on day 4.
//
// 1)
// 10
// {10,10,10}
// {10,10,10}
//
// Returns: 3
//
//
//
// 2)
// 2
// {1,2,1,2,1,2,1,2}
// {1,1,1,1,2,2,2,2}
//
// Returns: 5
//
// They will both go to the store on the following days: 1, 3, 5, 6, and 7.
//
// 3)
// 100
// {1,2,3}
// {4,5,6}
//
// Returns: 0
//
// In this test case they do not buy any T-shirts at all.
//
// 4)
// 10
// {10,1,10,1}
// {1,10,1,10}
//
// Returns: 0
//
//
//
// END KAWIGIEDIT TESTING


//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
